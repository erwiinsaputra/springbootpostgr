apiVersion: v1
kind: Service
metadata:
  creationTimestamp: '2021-08-22T15:39:53Z'
  labels:
    app.kubernetes.io/instance: test
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:loadBalancer':
            'f:ingress': {}
      manager: kube-vpnkit-forwarder
      operation: Update
      time: '2021-08-22T15:39:53Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app.kubernetes.io/instance': {}
        'f:spec':
          'f:externalTrafficPolicy': {}
          'f:ports':
            .: {}
            'k:{"port":8080,"protocol":"TCP"}':
              .: {}
              'f:nodePort': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
          'f:selector':
            .: {}
            'f:app': {}
          'f:sessionAffinity': {}
          'f:type': {}
      manager: kubectl-expose
      operation: Update
      time: '2021-08-22T15:39:53Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:ports':
            'k:{"port":8080,"protocol":"TCP"}':
              .: {}
              'f:nodePort': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
      manager: kubectl-edit
      operation: Update
      time: '2021-08-22T15:42:40Z'
  name: spring-boot-postgres-sample
  namespace: default
  resourceVersion: '148268'
  uid: e45611d1-5222-4a2a-8d59-d8bf16eb08c7
spec:
  clusterIP: 10.104.39.249
  clusterIPs:
    - 10.104.39.249
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - nodePort: 31835
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: spring-boot-postgres-sample
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer:
    ingress:
      - hostname: localhost
